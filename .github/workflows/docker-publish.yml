
name: java web cicd

on:
  push:
    tags:
      - 'v*'
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: echotester

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: checkout my repo
      uses: actions/checkout@v3
    
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Maven
      run: mvn -B package --file pom.xml
      
            
    - name: login to github image registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.PERSONAL_TOKEN }}
          
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.IMAGE_NAME }}
        tags: type=semver,pattern={{version}}
        flavor: latest=false
              
    - name: Build and push Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
    outputs:
      tag: ${{ steps.meta.outputs.tags }}
      
  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
       
    steps:
    - name: checkout my repo
      uses: actions/checkout@v3
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1
        
    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-render
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: echo-task.json
        container-name: echo-tester
        image: ${{ needs.build.outputs.tag }}
        
    - name: Amazon ECS "Deploy Task Definition" Action for GitHub Actions
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-render.outputs.task-definition }}
        service: echo-tester-service
        cluster: my-worker

      
      

    
